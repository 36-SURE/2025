{
  "hash": "5aee7711ece4c31b642d237b21051b22",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Data visualization: categorical data\"\nauthor: \"<br>SURE 2025<br><br>Department of Statistics & Data Science<br>Carnegie Mellon University\"\nfooter:  \"[36-SURE.github.io/2025](https://36-sure.github.io/2025)\"\nformat:\n  revealjs:\n    theme: theme.scss\n    chalkboard: true\n    smaller: true\n    slide-number: c/t\n    code-line-numbers: false\n    linestretch: 1.25\n    html-math-method:\n      method: mathjax\n      url: \"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"\n---\n\n\n\n\n\n# Background\n\n## Data\n\n-   [Flying ettiquette survey](https://fivethirtyeight.com/features/airplane-etiquette-recline-seat)\n\n-   Publicly available on [GitHub](https://github.com/fivethirtyeight/data/tree/master/flying-etiquette-survey) and also via the `ggmosaic` package (the dataset is called `fly`).\n\n-   What does each row represent here?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\ntheme_set(theme_light()) # setting the ggplot theme\nlibrary(ggmosaic) # make sure to install it first\nflying_etiquette <- fly |> \n  filter(!is.na(do_you_recline), !is.na(rude_to_recline))\nnames(flying_etiquette)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"id\"                             \"flight_freq\"                   \n [3] \"do_you_recline\"                 \"height\"                        \n [5] \"has_child_under_18\"             \"three_seats_two_arms\"          \n [7] \"two_seats_one_arm\"              \"window_shade\"                  \n [9] \"rude_to_move_to_unsold_seat\"    \"rude_to_talk_to_neighbor\"      \n[11] \"six_hr_flight_leave_seat\"       \"reclining_obligation_to_behind\"\n[13] \"rude_to_recline\"                \"eliminate_reclining\"           \n[15] \"rude_to_switch_seats_friends\"   \"rude_to_switch_seats_family\"   \n[17] \"rude_to_wake_neighbor_bathroom\" \"rude_to_wake_neighbor_walk\"    \n[19] \"rude_to_bring_baby\"             \"rude_to_bring_unruly_child\"    \n[21] \"use_electronics_takeoff\"        \"smoked_inflight\"               \n[23] \"gender\"                         \"age\"                           \n[25] \"household_income\"               \"education\"                     \n[27] \"region\"                        \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n\n## Categorical data\n\nTwo different versions of categorical data:\n\n**Nominal**: categorical variables having unordered scales\n\n-   Examples: race, gender, species, etc,\n\n**Ordinal**: ordered categories; levels with a meaningful order\n\n-   Examples: education level, grades, ranks\n\n## Factors in `R`\n\n-   In `R`, factors are used to work with categorical variables\n\n-   `R` treats factors as ordinal - defaults to alphabetical\n\n    -   May need to manually define the factor levels (e.g., the reference level)\n\n-   See the [`forcats`](https://forcats.tidyverse.org/) package (automatically loaded with `tidyverse`)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(flying_etiquette$do_you_recline)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"factor\"\n```\n\n\n:::\n\n```{.r .cell-code}\nlevels(flying_etiquette$do_you_recline)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"never\"               \"once in a while\"     \"about half the time\"\n[4] \"usually\"             \"always\"             \n```\n\n\n:::\n:::\n\n\n\n# 1D categorical data\n\n## Summarizing 1D categorical data\n\nHow often do these respondents recline?\n\nFrequency tables (counts)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(flying_etiquette$do_you_recline)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n              never     once in a while about half the time             usually \n                170                 256                 117                 175 \n             always \n                136 \n```\n\n\n:::\n\n```{.r .cell-code}\n# flying_etiquette |> \n#   group_by(do_you_recline) |>\n#   summarize(n = n(), .groups = \"drop\")\n\nflying_etiquette |> \n  count(do_you_recline)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 2\n  do_you_recline          n\n  <fct>               <int>\n1 never                 170\n2 once in a while       256\n3 about half the time   117\n4 usually               175\n5 always                136\n```\n\n\n:::\n:::\n\n\n\n## Summarizing 1D categorical data\n\nProportion table\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprop.table(table(flying_etiquette$do_you_recline))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n              never     once in a while about half the time             usually \n          0.1990632           0.2997658           0.1370023           0.2049180 \n             always \n          0.1592506 \n```\n\n\n:::\n\n```{.r .cell-code}\nflying_etiquette |> \n  count(do_you_recline) |> \n  mutate(prop = n / sum(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n  do_you_recline          n  prop\n  <fct>               <int> <dbl>\n1 never                 170 0.199\n2 once in a while       256 0.300\n3 about half the time   117 0.137\n4 usually               175 0.205\n5 always                136 0.159\n```\n\n\n:::\n:::\n\n\n\n## Visualizing 1D categorical data\n\n::: columns\n::: {.column width=\"50%\" style=\"text-align: left;\"}\nCreate a bar chart with `geom_bar()`\n\n-   Map `do_you_recline` to the x-axis\n\n-   Counts of each category are displayed on the y-axis\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflying_etiquette |> \n  ggplot(aes(x = do_you_recline)) +\n  geom_bar()\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\" style=\"text-align: left;\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-categorical_files/figure-revealjs/unnamed-chunk-8-1.png){width=960}\n:::\n:::\n\n\n:::\n:::\n\n## Behind the scenes of `geom_bar()`\n\n-   start with the data\n-   aggregate and count the number of observations in each bar\n-   map to plot aesthetics\n\n![](https://r4ds.hadley.nz/images/visualization-stat-bar.png)\n\n## Visualizing 1D categorical data\n\n::: columns\n::: {.column width=\"50%\" style=\"text-align: left;\"}\nInstead of `geom_bar()`, do this \"by hand\" (Quang prefers this way)\n\n-   aggregate and obtain the counts first with `count()` or (`group_by` and `summarize()`)\n\n-   then use `geom_col()`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflying_etiquette |>\n  count(do_you_recline, name = \"count\") |> \n  ggplot(aes(x = do_you_recline, y = count)) +\n  geom_col()\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\" style=\"text-align: left;\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-categorical_files/figure-revealjs/unnamed-chunk-10-1.png){width=960}\n:::\n:::\n\n\n:::\n:::\n\n## Visualizing 1D categorical data\n\n::: columns\n::: {.column width=\"50%\" style=\"text-align: left;\"}\nFlip your bar chart axes!\n\nJust simply replace `x` with `y` (Quang prefers this way)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflying_etiquette |>\n  ggplot(aes(y = do_you_recline)) +\n  geom_bar()\n```\n:::\n\n\n\nOr use `coord_flip()`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflying_etiquette |> \n  ggplot(aes(x = do_you_recline)) +\n  geom_bar() +\n  coord_flip()\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\" style=\"text-align: left;\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-categorical_files/figure-revealjs/unnamed-chunk-13-1.png){width=960}\n:::\n:::\n\n\n:::\n:::\n\n## What does a bar chart show?\n\n::: columns\n::: {.column width=\"50%\" style=\"text-align: left;\"}\n**Marginal distribution**: probability that a categorical variable $X$ (e.g., `do_you_recline`) takes each particular category value $x$ (`always`, `usually`, ..., `never`)\n\n-   Frequency bar charts (earlier version) give info about sample size, but this could be labeled in the chart (use `geom_text()` or `geom_label()`)\n\n-   Now, we create a proportion/percent bar chart to display the individual probabilities\n\n-   This shows the probability mass function (PMF) for discrete variables\n\n    -   (e.g. $P($ `do_you_recline` $=$ `never`$)$)\n:::\n\n::: {.column width=\"50%\" style=\"text-align: left;\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflying_etiquette |> \n  count(do_you_recline) |> \n  mutate(prop = n / sum(n)) |> \n  ggplot(aes(x = prop, y = do_you_recline)) +\n  geom_col()   # + geom_label(aes(label = n), hjust = 1)\n```\n\n::: {.cell-output-display}\n![](03-categorical_files/figure-revealjs/unnamed-chunk-14-1.png){width=960}\n:::\n:::\n\n\n:::\n:::\n\n## Population vs sample\n\nPopulation: The collection of all subjects of interest\n\nSample: A representative subset of the population of interest\n\n. . .\n\nThe survey respondents is just a subset of all airplane flyers\n\n. . .\n\n**Empirical distribution**: estimating the true marginal distribution with observed (sample) data\n\n. . .\n\n-   Estimate $P($ `do_you_recline` = $C_j$) with $\\hat p_j$ for each category $C_j$ (e.g., $\\hat p_\\texttt{always}$, ..., $\\hat p_\\texttt{never}$)\n\n    -   Standard error for each $\\hat p_j$: $\\quad \\displaystyle \\text{SE}(\\hat{p}_j) = \\sqrt{\\frac{\\hat{p}_j (1 - \\hat{p}_j)}{n}}$\n\n## Adding confidence intervals to bar chart\n\n::: columns\n::: {.column width=\"50%\" style=\"text-align: left;\"}\n<br>\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflying_etiquette |> \n  count(do_you_recline) |> \n  mutate(prop = n / sum(n),\n         se = sqrt(prop * (1 - prop) / sum(n)),\n         lower = prop - 2 * se,\n         upper = prop + 2 * se) |> \n  ggplot(aes(x = prop, y = do_you_recline)) +\n  geom_col() +\n  geom_errorbar(aes(xmin = lower, xmax = upper), \n                color = \"blue\", \n                width = 0.2, \n                linewidth = 1)\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\" style=\"text-align: left;\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-categorical_files/figure-revealjs/unnamed-chunk-16-1.png){width=960}\n:::\n:::\n\n\n:::\n:::\n\n## Ordering factors in a bar chart\n\n::: columns\n::: {.column width=\"50%\" style=\"text-align: left;\"}\nOrder the bars by proportion\n\n(Let's also flip the axes)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflying_etiquette |> \n  count(do_you_recline) |> \n  mutate(\n    prop = n / sum(n),\n    se = sqrt(prop * (1 - prop) / sum(n)),\n    lower = prop - 2 * se,\n    upper = prop + 2 * se,\n    do_you_recline = fct_reorder(do_you_recline, prop)\n  ) |> \n  ggplot(aes(x = prop, y = do_you_recline)) +\n  geom_col() +\n  geom_errorbar(aes(xmin = lower, xmax = upper), \n                color = \"blue\", \n                width = 0.2, \n                linewidth = 1)\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\" style=\"text-align: left;\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-categorical_files/figure-revealjs/unnamed-chunk-18-1.png){width=960}\n:::\n:::\n\n\n:::\n:::\n\n## Pie charts... don't make them\n\nWhy?\n\n-   <https://www.data-to-viz.com/caveat/pie.html>\n\n-   <https://github.com/cxli233/FriendsDontLetFriends>\n\n3D pie charts?... even worse\n\n## Inference for 1D categorical data\n\nChi-square test for 1D categorical data\n\n-   Null hypothesis: $H_0$: $p_1 = p_2 = \\cdots = p_K$\n\n-   Test statistic: $\\displaystyle \\chi^2 = \\sum_{j=1}^K \\frac{(O_j - E_j)^2}{E_j}$, where\n\n    -   $O_j$: observed counts in category $j$\n\n    -   $E_j$ : expected counts under the null (i.e., $n/K$ or each category is equally likely to occur)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchisq.test(table(flying_etiquette$do_you_recline))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tChi-squared test for given probabilities\n\ndata:  table(flying_etiquette$do_you_recline)\nX-squared = 66.644, df = 4, p-value = 1.159e-13\n```\n\n\n:::\n:::\n\n\n\n## Hypothesis testing in general\n\nComputing $p$-values works like this:\n\n-   Choose a test statistic\n\n-   Compute the test statistic using the data\n\n-   Is test statistic \"unusual\" compared to what we would expect under the null?\n\n-   Compare $p$-value to the target error rate (\"significance level\") $\\alpha$\n\n    -   Typically choose $\\alpha = 0.05$ ([the origins of 0.05](https://www2.psych.ubc.ca/~schaller/528Readings/CowlesDavis1982.pdf))\n\n# 2D categorical data\n\n## Summarizing 2D categorical data\n\nContinuing with the flying etiquette survey data, let's look at the responses to 2 questions\n\n-   `do_you_recline` (Do you ever recline your seat when you fly?)\n\n-   `rude_to_recline` (Is it rude to recline your seat on a plane?)\n\nHow many levels does each variable have?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(flying_etiquette$do_you_recline)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n              never     once in a while about half the time             usually \n                170                 256                 117                 175 \n             always \n                136 \n```\n\n\n:::\n\n```{.r .cell-code}\ntable(flying_etiquette$rude_to_recline)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n      no somewhat      yes \n     502      281       71 \n```\n\n\n:::\n:::\n\n\n\n## Summarizing 2D categorical data\n\nTwo-way table (or contingency table, cross tabulation, crosstab)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(\"Recline?\" = flying_etiquette$do_you_recline, \n      \"Rude to reline?\" = flying_etiquette$rude_to_recline)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                     Rude to reline?\nRecline?               no somewhat yes\n  never                35       81  54\n  once in a while     116      129  11\n  about half the time  82       35   0\n  usually             145       27   3\n  always              124        9   3\n```\n\n\n:::\n\n```{.r .cell-code}\nxtabs(~ do_you_recline + rude_to_recline, data = flying_etiquette)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                     rude_to_recline\ndo_you_recline         no somewhat yes\n  never                35       81  54\n  once in a while     116      129  11\n  about half the time  82       35   0\n  usually             145       27   3\n  always              124        9   3\n```\n\n\n:::\n:::\n\n\n\n## Visualizing 2D categorical data\n\n::: columns\n::: {.column width=\"50%\" style=\"text-align: left;\"}\nStacked bar chart: a bar chart of spine charts\n\nEmphasizes the marginal distribution of each category of `x` variable\n\n-   e.g., $P($ `rude_to_recline` $=$ `somewhat` $)$\n\nSimilar to 1D bar charts, start with counting every combination of 2 variables (using `count()` or `group_by()` and `summarize()`), then plot with `geom_col()`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# flying_etiquette |>\n#   ggplot(aes(x = rude_to_recline,\n#              fill = do_you_recline)) +\n#   geom_bar()\nflying_etiquette |>\n  count(rude_to_recline, do_you_recline) |>\n  ggplot(aes(x = rude_to_recline, y = n, \n             # filled by the other categorical variable\n             fill = do_you_recline)) + \n  geom_col()\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\" style=\"text-align: left;\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-categorical_files/figure-revealjs/unnamed-chunk-23-1.png){width=960}\n:::\n:::\n\n\n:::\n:::\n\n## Visualizing 2D categorical data\n\n::: columns\n::: {.column width=\"50%\" style=\"text-align: left;\"}\nStacked bar chart (proportion version)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflying_etiquette |>\n  count(rude_to_recline, do_you_recline) |>\n  ggplot(aes(x = rude_to_recline, y = n, \n             fill = do_you_recline)) +\n  geom_col(position = \"fill\")\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\" style=\"text-align: left;\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-categorical_files/figure-revealjs/unnamed-chunk-25-1.png){width=960}\n:::\n:::\n\n\n:::\n:::\n\n## Visualizing 2D categorical data\n\n::: columns\n::: {.column width=\"50%\" style=\"text-align: left;\"}\nSide-by-side (grouped, dodged) bar chart: a bar chart of bar charts\n\nShows the conditional distribution of `fill` variable given `x` variable\n\n-   e.g., $P($ `do_you_recline` $=$ `always` $\\mid$ `rude_to_recline` $=$ `somewhat` $)$\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflying_etiquette |>\n  count(rude_to_recline, do_you_recline) |>\n  ggplot(aes(x = rude_to_recline, y = n, \n             fill = do_you_recline)) + \n  geom_col(position = \"dodge\")\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\" style=\"text-align: left;\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-categorical_files/figure-revealjs/unnamed-chunk-27-1.png){width=960}\n:::\n:::\n\n\n:::\n:::\n\n## Joint, marginal, and conditional probabilities\n\n::: columns\n::: {.column width=\"50%\" style=\"text-align: left;\"}\nLet $X$ = `rude_to_recline` and $Y$ = `do_you_recline`\n\n-   Joint distribution: frequency of the intersection\n\n    -   e.g., $P(X =$ `somewhat` $, Y =$ `always` $)$\n\n-   Marginal distribution: row sums or column sums\n\n    -   e.g., $P(X =$ `somewhat` $)$, $P(Y =$ `always` $)$\n\n-   Conditional distribution: probability event $X$ given event $Y$\n\n    -   e.g., $P(X =$ `somewhat` $\\mid Y =$ `always` $)$\n\n    $\\displaystyle \\qquad \\quad = \\frac{P(X = \\texttt{somewhat}, Y = \\texttt{always})}{P(Y = \\texttt{always})}$\n:::\n\n::: {.column width=\"50%\" style=\"text-align: left;\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflying_etiquette |> \n  select(do_you_recline, rude_to_recline) |> \n  table()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                     rude_to_recline\ndo_you_recline         no somewhat yes\n  never                35       81  54\n  once in a while     116      129  11\n  about half the time  82       35   0\n  usually             145       27   3\n  always              124        9   3\n```\n\n\n:::\n\n```{.r .cell-code}\nflying_etiquette |> \n  select(do_you_recline, rude_to_recline) |> \n  table() |> \n  prop.table()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                     rude_to_recline\ndo_you_recline                 no    somewhat         yes\n  never               0.040983607 0.094847775 0.063231850\n  once in a while     0.135831382 0.151053864 0.012880562\n  about half the time 0.096018735 0.040983607 0.000000000\n  usually             0.169789227 0.031615925 0.003512881\n  always              0.145199063 0.010538642 0.003512881\n```\n\n\n:::\n:::\n\n\n:::\n:::\n\n## Joint, marginal, and conditional probabilities\n\nTwo-way proportion table (the `tidyverse` way) with `pivot_wider`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflying_etiquette |>\n  group_by(rude_to_recline, do_you_recline) |>\n  summarize(joint = n() / nrow(flying_etiquette)) |>\n  pivot_wider(names_from = rude_to_recline, values_from = joint, values_fill = 0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 4\n  do_you_recline          no somewhat     yes\n  <fct>                <dbl>    <dbl>   <dbl>\n1 never               0.0410   0.0948 0.0632 \n2 once in a while     0.136    0.151  0.0129 \n3 about half the time 0.0960   0.0410 0      \n4 usually             0.170    0.0316 0.00351\n5 always              0.145    0.0105 0.00351\n```\n\n\n:::\n:::\n\n\n\n## Categorical heatmaps\n\n::: columns\n::: {.column width=\"50%\" style=\"text-align: left;\"}\n-   Use `geom_tile` to display joint distribution of two categorical variables\n\n-   Annotate tiles with labels of percentages using `geom_text()` and the `scales` package (a very neat package)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflying_etiquette |>\n  group_by(rude_to_recline, do_you_recline) |>\n  summarize(\n    freq = n(), \n    joint = n() / nrow(flying_etiquette)\n  ) |> \n  ggplot(aes(x = rude_to_recline, y = do_you_recline)) +\n  geom_tile(aes(fill = freq), color = \"white\") +\n  geom_text(aes(label = scales::percent(joint))) +\n  scale_fill_gradient2()\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\" style=\"text-align: left;\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-categorical_files/figure-revealjs/unnamed-chunk-31-1.png){width=960}\n:::\n:::\n\n\n:::\n:::\n\n## Visualizing independence\n\n::: columns\n::: {.column width=\"50%\" style=\"text-align: left;\"}\nMosaic plot\n\n-   spine chart of spine charts\n\n-   width: marginal distribution of `rude_to_recline`\n\n-   height: conditional distribution of `do_you_recline` \\| `rude_to_recline`\n\n-   area: joint distribution\n\nUsing a mosaic plot to visually check for independence:\n\n-   check whether all proportions are the same (the boxes line up in a grid)\n:::\n\n::: {.column width=\"50%\" style=\"text-align: left;\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflying_etiquette |> \n  select(rude_to_recline, do_you_recline) |> \n  table() |> \n  mosaicplot(main = \"Relationship between reclining frequency and opinion on rudeness\")\n```\n\n::: {.cell-output-display}\n![](03-categorical_files/figure-revealjs/unnamed-chunk-32-1.png){width=960}\n:::\n:::\n\n\n:::\n:::\n\n## Visualizing independence\n\nMosaic plot with `ggmosaic` package\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nflying_etiquette |> \n  ggplot() +\n  geom_mosaic(aes(x = product(do_you_recline, rude_to_recline), fill = do_you_recline))\n```\n\n::: {.cell-output-display}\n![](03-categorical_files/figure-revealjs/unnamed-chunk-33-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n## Inference for 2D categorical data\n\nChi-square test for 2D categorical data\n\n-   Null hypothesis: $H_0$: 2 categorical variables are independent of each other\n\n    -   e.g., no association between `do_you_recline` and `rude_to_recline`\n\n-   Test statistic: $\\displaystyle \\chi^2 = \\sum_i^{k_1} \\sum_j^{k_2} \\frac{(O_{ij} - E_{ij})^2}{E_{ij}}$\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# chisq.test(table(flying_etiquette$rude_to_recline, flying_etiquette$do_you_recline))\nflying_etiquette |> \n  select(rude_to_recline, do_you_recline) |> \n  table() |> \n  chisq.test()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's Chi-squared test\n\ndata:  table(select(flying_etiquette, rude_to_recline, do_you_recline))\nX-squared = 316.73, df = 8, p-value < 2.2e-16\n```\n\n\n:::\n:::\n\n\n\n## Residuals\n\nRecall the test statistic: $\\displaystyle \\chi^2 = \\sum_i^{k_1} \\sum_j^{k_2} \\frac{(O_{ij} - E_{ij})^2}{E_{ij}}$\n\nDefine the Pearson residuals: $\\displaystyle r_{ij} = \\frac{O_{ij} - E_{ij}}{\\sqrt{E_{ij}}}$\n\nSome rules of thumb:\n\n-   $r_{ij} \\approx 0$: observed counts are close to expected counts\n\n-   $|r_{ij}| > 2$: significant at $\\alpha = 0.05$\n\n-   very positive $r_{ij}$: higher than expected\n\n-   very negative $r_{ij}$: lower than expected\n\n## Residuals\n\nMosaic plots with boxes color-coded by Pearson residuals\n\nTells us which combinations of 2 categorical variables (cells) are much higher/lower than expected\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nflying_etiquette |> \n  select(rude_to_recline, do_you_recline) |> \n  table() |> \n  mosaicplot(main = \"Relationship between reclining frequency and opinion on rudeness\", shade = TRUE)\n```\n\n::: {.cell-output-display}\n![](03-categorical_files/figure-revealjs/unnamed-chunk-35-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n## Beyond 2D: facets!\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflying_etiquette %>%\n  ggplot(aes(x = rude_to_recline, fill = do_you_recline)) + \n  geom_bar() +\n  facet_wrap(~ flight_freq)\n```\n\n::: {.cell-output-display}\n![](03-categorical_files/figure-revealjs/unnamed-chunk-36-1.png){width=1152}\n:::\n:::\n\n\n\n# Appendix\n\n## The `janitor` package\n\nThe most popular `janitor` function is `clean_names()`... for cleaning column names\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# before\niris |> \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n```\n\n\n:::\n\n```{.r .cell-code}\n# after\nlibrary(janitor)\niris |> \n  clean_names() |> \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  sepal_length sepal_width petal_length petal_width species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n```\n\n\n:::\n:::\n\n\n\n## Tabulation with the `janitor` package\n\nThe lesser-known stars of `janitor`: functions for tabulation of categorical data\n\n::: columns\n::: {.column width=\"50%\" style=\"text-align: left;\"}\n`tabyl`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflying_etiquette |> \n  tabyl(do_you_recline)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      do_you_recline   n   percent\n               never 170 0.1990632\n     once in a while 256 0.2997658\n about half the time 117 0.1370023\n             usually 175 0.2049180\n              always 136 0.1592506\n```\n\n\n:::\n:::\n\n\n:::\n\n::: {.column width=\"50%\" style=\"text-align: left;\"}\n`adorn_*()` functions\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflying_etiquette |> \n  tabyl(do_you_recline, rude_to_recline) |> \n  adorn_percentages(\"row\") |> \n  adorn_pct_formatting(digits = 2) |> \n  adorn_ns()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      do_you_recline           no     somewhat         yes\n               never 20.59%  (35) 47.65%  (81) 31.76% (54)\n     once in a while 45.31% (116) 50.39% (129)  4.30% (11)\n about half the time 70.09%  (82) 29.91%  (35)  0.00%  (0)\n             usually 82.86% (145) 15.43%  (27)  1.71%  (3)\n              always 91.18% (124)  6.62%   (9)  2.21%  (3)\n```\n\n\n:::\n:::\n\n\n:::\n:::\n\nFor more, see [this overview](https://cran.r-project.org/web/packages/janitor/vignettes/janitor.html) and [this tutorial](https://cran.r-project.org/web/packages/janitor/vignettes/tabyls.html)\n\n<!-- ::: columns -->\n\n<!-- ::: {.column width=\"50%\" style=\"text-align: left;\"} -->\n\n<!-- c1 -->\n\n<!-- ::: -->\n\n<!-- ::: {.column width=\"50%\" style=\"text-align: left;\"} -->\n\n<!-- c2 -->\n\n<!-- ::: -->\n\n<!-- ::: -->\n",
    "supporting": [
      "03-categorical_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}